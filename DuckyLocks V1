-- Load UI Library
loadstring(game:HttpGet("https://raw.githubusercontent.com/DuckysADM/Loading/refs/heads/main/Loading.txt"))()

local Library = loadstring(game:HttpGet("https://raw.githubusercontent.com/DuckysADM/DuckysADM/refs/heads/main/DuckysADM%20Script.txt"))()


local Window = Library:New({ Name = "DuckysADM Script 🦆🦆🦆🦆🦆" })

local Page = Window:Page({ Name = "Main" })
local Page2 = Window:Page({ Name = "Visuals" })
local Page3 = Window:Page({ Name = "Player" })

local PageSection1 = Page:Section({ Name = "Main", Fill = true, Side = "Left" })
local Page2Section2 = Page2:Section({ Name = "Visuals", Fill = true, Side = "Left" })
local PlayerPageSection = Page3:Section({ Name = "Player", Fill = true, Side = "Left" })

-- Camlock Button
PageSection1:Button({
    Name = "Lock (Q)",
    callback = function()
        loadstring(game:HttpGet("https://raw.githubusercontent.com/DuckysADM/Good-Lock/refs/heads/main/Lock"))()
    end
})

-- Hitbox Expander Button
PageSection1:Button({
    Name = "Coming soon nigger",
    callback = function()
        -- Add Hitbox Expander functionality here
    end
})

-- ESP Variables
local Players = game:GetService("Players")
local RunService = game:GetService("RunService")
local Camera = workspace.CurrentCamera
local ESP_Enabled = false
local ESP_Objects = {}

-- Function to Create ESP Name Tags
local function CreateESP(plr)
    if plr == Players.LocalPlayer then return end
    if ESP_Objects[plr] then return end

    local text = Drawing.new("Text")
    text.Size = 11
    text.Color = Color3.fromRGB(255, 255, 255)
    text.Outline = true
    text.Center = true
    text.Visible = false
    ESP_Objects[plr] = text

    RunService.RenderStepped:Connect(function()
        if ESP_Enabled and plr.Character and plr.Character:FindFirstChild("HumanoidRootPart") then
            local rootPos, onScreen = Camera:WorldToViewportPoint(plr.Character.HumanoidRootPart.Position)
            if onScreen then
                text.Position = Vector2.new(rootPos.X, rootPos.Y - 20)
                text.Text = plr.Name
                text.Visible = true
            else
                text.Visible = false
            end
        else
            text.Visible = false
        end
    end)
end

-- Function to Toggle ESP
local function ToggleESP(state)
    ESP_Enabled = state
    if not state then
        for _, obj in pairs(ESP_Objects) do
            obj.Visible = false
        end
    else
        for _, plr in ipairs(Players:GetPlayers()) do
            CreateESP(plr)
        end
    end
end

-- Apply ESP to Existing Players
for _, player in ipairs(Players:GetPlayers()) do
    CreateESP(player)
end

-- Apply ESP to New Players
Players.PlayerAdded:Connect(CreateESP)

-- ESP Toggle
Page2Section2:Toggle({
    Name = "Name ESP",
    Default = false,
    callback = function(value)
        ToggleESP(value)
    end
})

-- Box ESP Script
local ESP_Boxes = {}
local function BoxESP(state)
    if state then
        for _, plr in ipairs(Players:GetPlayers()) do
            if plr ~= Players.LocalPlayer then
                local box = Drawing.new("Square")
                box.Color = Color3.fromRGB(255, 255, 255)
                box.Thickness = 2
                box.Filled = false
                ESP_Boxes[plr] = box
            end
        end

        RunService.RenderStepped:Connect(function()
            for player, box in pairs(ESP_Boxes) do
                if player.Character and player.Character:FindFirstChild("HumanoidRootPart") then
                    local rootPos, onScreen = Camera:WorldToViewportPoint(player.Character.HumanoidRootPart.Position)
                    if onScreen then
                        box.Size = Vector2.new(2000 / rootPos.Z, 3000 / rootPos.Z)
                        box.Position = Vector2.new(rootPos.X - box.Size.X / 2, rootPos.Y - box.Size.Y / 2)
                        box.Visible = true
                    else
                        box.Visible = false
                    end
                else
                    box.Visible = false
                end
            end
        end)
    else
        for _, box in pairs(ESP_Boxes) do
            box.Visible = false
        end
        -- Clean up boxes when turning off the toggle
        for plr, box in pairs(ESP_Boxes) do
            box:Remove()
        end
        ESP_Boxes = {}
    end
end

-- Box ESP Toggle
Page2Section2:Toggle({
    Name = "Box ESP",
    Default = false,
    callback = function(value)
        BoxESP(value)
    end
})

-- Fly Button
PlayerPageSection:Button({
    Name = "Fly [X] (RE-PRESS ON SPAWN",
    callback = function()
        local plr = game.Players.LocalPlayer
        local mouse = plr:GetMouse()

        if workspace:FindFirstChild("Core") then
            workspace.Core:Destroy()
        end

        if _G.FlyConnections then
            for _, conn in pairs(_G.FlyConnections) do
                conn:Disconnect()
            end
        end

        _G.FlyConnections = {}

        local function setupCore()
            if workspace:FindFirstChild("Core") then
                workspace.Core:Destroy()
            end

            local Core = Instance.new("Part")
            Core.Name = "Core"
            Core.Size = Vector3.new(0.05, 0.05, 0.05)
            Core.Parent = workspace

            local Weld = Instance.new("Weld", Core)
            Weld.Part0 = Core
            Weld.Part1 = plr.Character:WaitForChild("LowerTorso")
            Weld.C0 = CFrame.new(0, 0, 0)

            return Core
        end

        local torso
        local flying = false
        local defaultSpeed = 20
        local speed = defaultSpeed
        local keys = { a = false, d = false, w = false, s = false }

        local function startFlying()
            local pos = Instance.new("BodyPosition", torso)
            local gyro = Instance.new("BodyGyro", torso)
            pos.Name = "EPIXPOS"
            pos.maxForce = Vector3.new(math.huge, math.huge, math.huge)
            pos.position = torso.Position
            gyro.maxTorque = Vector3.new(9e9, 9e9, 9e9)
            gyro.cframe = torso.CFrame

            repeat
                task.wait()
                plr.Character.Humanoid.PlatformStand = true
                local new = gyro.cframe - gyro.cframe.p + pos.position

                if not keys.w and not keys.s and not keys.a and not keys.d then
                    speed = 5
                else
                    speed = defaultSpeed
                end

                if keys.w then
                    new = new + workspace.CurrentCamera.CFrame.lookVector * speed
                end
                if keys.s then
                    new = new - workspace.CurrentCamera.CFrame.lookVector * speed
                end
                if keys.d then
                    new = new * CFrame.new(speed, 0, 0)
                end
                if keys.a then
                    new = new * CFrame.new(-speed, 0, 0)
                end

                pos.position = new.p
                gyro.cframe = workspace.CurrentCamera.CFrame
            until not flying

            pos:Destroy()
            gyro:Destroy()
            flying = false
            plr.Character.Humanoid.PlatformStand = false
        end

        local function setupControls()
            local e1 = mouse.KeyDown:Connect(function(key)
                if key == "w" then keys.w = true end
                if key == "s" then keys.s = true end
                if key == "a" then keys.a = true end
                if key == "d" then keys.d = true end
                if key == "x" then
                    flying = not flying
                    if flying then startFlying() end
                end
            end)

            local e2 = mouse.KeyUp:Connect(function(key)
                if key == "w" then keys.w = false end
                if key == "s" then keys.s = false end
                if key == "a" then keys.a = false end
                if key == "d" then keys.d = false end
            end)

            table.insert(_G.FlyConnections, e1)
            table.insert(_G.FlyConnections, e2)
        end

        torso = setupCore()
        setupControls()
    end
})

-- Speed Button
PlayerPageSection:Button({
    Name = "Speed [C]",
    callback = function()
        getgenv().Multiplier = 5
        local SpeedEnabled = false
        local plr = game.Players.LocalPlayer
        local RunService = game:GetService("RunService")

        game:GetService("UserInputService").InputBegan:Connect(function(input)
            if input.KeyCode == Enum.KeyCode.C then
                SpeedEnabled = not SpeedEnabled
                while SpeedEnabled do
                    plr.Character.HumanoidRootPart.CFrame = plr.Character.HumanoidRootPart.CFrame + plr.Character.Humanoid.MoveDirection * getgenv().Multiplier
                    RunService.Stepped:Wait()
                end
            end
        end)
    end
})

-- Force Reset Button
PlayerPageSection:Button({
    Name = "Force Reset",
    callback = function()
        local plr = game.Players.LocalPlayer
        if plr.Character and plr.Character:FindFirstChild("Humanoid") then
            plr.Character.Humanoid.Health = 0
        end
    end
})

Window:Initialize()
